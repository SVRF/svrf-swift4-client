//
// MediaImages.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Resized &#x60;jpeg&#x60; stills of the Media. For &#x60;video&#x60;, these will be stills from 1/3 of the video&#39;s duration. Resolutions larger than the original size will not be included (the original is included as &#x60;max&#x60;). For stereoscopic content, this will be a monoscopic version of the top or left channel. */

open class MediaImages: Codable {

    /** 136px wide image. This image may be used for thumbnailing. */
    public var _136: String?
    /** 540px wide image. This image may be used for thumbnailing. */
    public var _540: String?
    /** 720px wide image. This image may be used for thumbnailing. */
    public var _720: String?
    /** 1080px wide image. This image should be used for previews or other uses requiring clear resolution at low bandwidth. */
    public var _1080: String?
    /** 4096px wide image. This image should be used on mobile devices, as larger images may cause some devices to crash. */
    public var _4096: String?
    /** 1080px wide watermarked image. This image should be used for sharing on social media. */
    public var _1080Watermarked: String?
    /** A 16:9 image. This image may be used for thumbnailing. */
    public var _720x405: String?
    /** A 4:3 image. This image may be used for thumbnailing. */
    public var _720x540: String?
    /** A 1:1 image. This image may be used for thumbnailing. */
    public var _720x720: String?
    /** The image in its largest available size (the original size). This image should be used in third-party applications for the best experience, except on mobile devices (see &#x60;4096&#x60;). */
    public var max: String?


    
    public init(_136: String?, _540: String?, _720: String?, _1080: String?, _4096: String?, _1080Watermarked: String?, _720x405: String?, _720x540: String?, _720x720: String?, max: String?) {
        self._136 = _136
        self._540 = _540
        self._720 = _720
        self._1080 = _1080
        self._4096 = _4096
        self._1080Watermarked = _1080Watermarked
        self._720x405 = _720x405
        self._720x540 = _720x540
        self._720x720 = _720x720
        self.max = max
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(_136, forKey: "136")
        try container.encodeIfPresent(_540, forKey: "540")
        try container.encodeIfPresent(_720, forKey: "720")
        try container.encodeIfPresent(_1080, forKey: "1080")
        try container.encodeIfPresent(_4096, forKey: "4096")
        try container.encodeIfPresent(_1080Watermarked, forKey: "1080Watermarked")
        try container.encodeIfPresent(_720x405, forKey: "720x405")
        try container.encodeIfPresent(_720x540, forKey: "720x540")
        try container.encodeIfPresent(_720x720, forKey: "720x720")
        try container.encodeIfPresent(max, forKey: "max")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        _136 = try container.decodeIfPresent(String.self, forKey: "136")
        _540 = try container.decodeIfPresent(String.self, forKey: "540")
        _720 = try container.decodeIfPresent(String.self, forKey: "720")
        _1080 = try container.decodeIfPresent(String.self, forKey: "1080")
        _4096 = try container.decodeIfPresent(String.self, forKey: "4096")
        _1080Watermarked = try container.decodeIfPresent(String.self, forKey: "1080Watermarked")
        _720x405 = try container.decodeIfPresent(String.self, forKey: "720x405")
        _720x540 = try container.decodeIfPresent(String.self, forKey: "720x540")
        _720x720 = try container.decodeIfPresent(String.self, forKey: "720x720")
        max = try container.decodeIfPresent(String.self, forKey: "max")
    }
}

